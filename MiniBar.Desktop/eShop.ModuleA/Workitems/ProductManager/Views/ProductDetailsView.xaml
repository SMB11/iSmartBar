<UserControl xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"  xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MiniBar.ProductsModule.Workitems.ProductManager.Views" 
             xmlns:prism="http://prismlibrary.com/"
             xmlns:infdp="clr-namespace:Infrastructure.DependencyProperties;assembly=Infrastructure"  x:Class="MiniBar.ProductsModule.Workitems.ProductManager.Views.ProductDetailsView"
             xmlns:dxInf="clr-namespace:DXInfrastructure.DependencyProperties;assembly=DXInfrastructure"  
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"  
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:vc ="clr-namespace:Infrastructure.MVVM.ValueConverters;assembly=Infrastructure"  
             mc:Ignorable="d"
             prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <vc:ObjectVisibilityConverter x:Key="ObjectVisibilityConverter"/>
        <vc:EditModeBooleanConverter x:Key="EditModeBooleanConverter"/>
    </UserControl.Resources>
    <Grid>
        <dxlc:DataLayoutControl Visibility="{Binding CurrentItem, Converter={StaticResource ObjectVisibilityConverter}}" infdp:ReadOnlyPanel.IsReadOnly="{Binding IsReadOnly, UpdateSourceTrigger=PropertyChanged}"
                                CurrentItem="{Binding CurrentItem}" dxe:ValidationService.IsValidationContainer="True" AutoGenerateItems="False" Width="auto" >
            <dxlc:DataLayoutItem Label="Name">
                <dxe:ButtonEdit infdp:ReadOnlyPanel.AlwaysReadOnly="True" Text="{Binding MainName, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" AllowDefaultButton="False">
                    <dxe:ButtonEdit.Buttons>
                        <dxe:ButtonInfo Content="Edit" Command="{Binding DataContext.NameEditCommand, ValidatesOnDataErrors=True, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType=UserControl}}"/>
                    </dxe:ButtonEdit.Buttons>
                </dxe:ButtonEdit>
            </dxlc:DataLayoutItem>
            <dxlc:DataLayoutItem Label="Category">
                <dxg:LookUpEdit AutoPopulateColumns="False" ItemsSource="{Binding DataContext.Categories, RelativeSource={RelativeSource AncestorType=Grid}}" DisplayMember="Name" ImmediatePopup="True" 
                         x:Name="categoryEdit" ValueMember="ID" EditValue="{Binding CategoryID, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <dxg:LookUpEdit.PopupContentTemplate>
                        <ControlTemplate>
                            <dxg:GridControl dxInf:GridProperties.GenerateColumns="True" x:Name="PART_GridControl" AutoGenerateColumns="None" EnableSmartColumnsGeneration="False">
                                <dxg:GridControl.View>
                                    <dxg:TreeListView AutoWidth="True" x:Name="treeListView1" TreeDerivationMode="Selfreference" KeyFieldName="ID" ParentFieldName="ParentID" />
                                </dxg:GridControl.View>
                            </dxg:GridControl>
                        </ControlTemplate>
                    </dxg:LookUpEdit.PopupContentTemplate>
                </dxg:LookUpEdit>
            </dxlc:DataLayoutItem>
            <dxlc:DataLayoutItem Label="Brand">
                <dxg:LookUpEdit AutoPopulateColumns="False" ItemsSource="{Binding DataContext.Brands, RelativeSource={RelativeSource AncestorType=Grid}}" DisplayMember="Name" ImmediatePopup="True" 
                         ValueMember="ID" EditValue="{Binding BrandID, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <dxg:LookUpEdit.PopupContentTemplate>
                        <ControlTemplate>
                            <dxg:GridControl dxInf:GridProperties.GenerateColumns="True" x:Name="PART_GridControl" AutoGenerateColumns="None" EnableSmartColumnsGeneration="False">
                                <dxg:GridControl.View>
                                    <dxg:TreeListView AutoWidth="True" x:Name="treeListView1" TreeDerivationMode="Selfreference" KeyFieldName="ID" ParentFieldName="ParentID" />
                                </dxg:GridControl.View>
                            </dxg:GridControl>
                        </ControlTemplate>
                    </dxg:LookUpEdit.PopupContentTemplate>
                </dxg:LookUpEdit>
            </dxlc:DataLayoutItem>
            <dxlc:DataLayoutItem Label="Price">
                <dxe:TextEdit Mask="c" MaskType="Numeric" Text="{Binding Price, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </dxlc:DataLayoutItem>
            <dxlc:DataLayoutItem Label="Description">
                <dxe:ButtonEdit infdp:ReadOnlyPanel.AlwaysReadOnly="True" Text="{Binding MainDescription, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" AllowDefaultButton="False">
                    <dxe:ButtonEdit.Buttons>
                        <dxe:ButtonInfo Content="Edit" Command="{Binding DataContext.DescriptionEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType=UserControl}}"/>
                    </dxe:ButtonEdit.Buttons>
                </dxe:ButtonEdit>
            </dxlc:DataLayoutItem>
        </dxlc:DataLayoutControl>
        <dx:WaitIndicator DeferedVisibility="{Binding IsObjectLoading}">
            <dx:WaitIndicator.ContentTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Please Wait" FontSize="20"/>
                        <TextBlock Text="{Binding}"/>
                    </StackPanel>
                </DataTemplate>
            </dx:WaitIndicator.ContentTemplate>
        </dx:WaitIndicator>
    </Grid>
</UserControl>
