<UserControl x:Class="MiniBar.ProductsModule.Workitems.ProductManager.Views.ProductManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:ViewModels="clr-namespace:MiniBar.ProductsModule.Workitems.ProductManager.Views"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             mc:Ignorable="d"
             xmlns:shared="clr-namespace:SharedEntities.Enum;assembly=SharedEntities"  
             xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:infdp="clr-namespace:Infrastructure;assembly=Infrastructure"  
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:vc ="clr-namespace:Infrastructure.Framework;assembly=Infrastructure"  
             xmlns:local ="clr-namespace:MiniBar.ProductsModule.Workitems.ProductManager.Views"  
            prism:ViewModelLocator.AutoWireViewModel="True"
             d:DataContext="{x:Type local:DesignTimeViewModel}">

    <UserControl.Resources>
        <vc:ObjectVisibilityConverter x:Key="ObjectVisibilityConverter"/>
        <vc:EditModeBooleanConverter x:Key="EditModeBooleanConverter"/>
    </UserControl.Resources>
    <dxdo:DockLayoutManager x:Name="dockLayoutManager" FloatingMode="Desktop" >
        <dxdo:LayoutGroup Caption="LayoutRoot" >
            <dxdo:LayoutPanel Caption="List" AllowClose="False" AllowDock="True" ItemWidth="*" >

                <dx:LoadingDecorator DockPanel.Dock="Left" >
                    <Grid DockPanel.Dock="Left">
                        <dxg:GridControl x:Name="grid"  ShowBorder="False" IsEnabled="{Binding IsListEnabled}" AllowInitiallyFocusedRow="False" SelectionMode="Row" CurrentItem="{Binding CurrentItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" infdp:GridProperties.GenerateColumns="True" ItemsSource="{Binding ListItems}" AutoGenerateColumns="None" EnableSmartColumnsGeneration="True">
                            <dxg:GridControl.View>
                                <dxg:TableView  AutoWidth="True" x:Name="tableView" ShowSearchPanelCloseButton="True" ShowSearchPanelMode="{Binding ShowSearchPanelMode}" AllowPerPixelScrolling="True" AllowEditing="False" ShowTotalSummary="True" ShowFixedTotalSummary="True">
                                </dxg:TableView>
                            </dxg:GridControl.View>

                            <dxg:GridControl.TotalSummary>
                                <dxg:GridSummaryItem SummaryType="Count" Alignment="Right" DisplayFormat="Total Items: {0}"/>
                            </dxg:GridControl.TotalSummary>
                        </dxg:GridControl>
                        <dx:WaitIndicator DeferedVisibility="{Binding IsListLoading}" Content="Loading...">
                            <dx:WaitIndicator.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="Please Wait" FontSize="20"/>
                                        <TextBlock Text="{Binding}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </dx:WaitIndicator.ContentTemplate>
                        </dx:WaitIndicator>
                    </Grid>
                </dx:LoadingDecorator>
            </dxdo:LayoutPanel>
            <dxdo:LayoutPanel Caption="Details" AllowClose="False" ItemWidth="2*" >

                    <Grid DockPanel.Dock="Left">
                        <dxlc:DataLayoutControl IsEnabled="{Binding IsDetailsEnabled}" Visibility="{Binding CurrentItemDetails, Converter={StaticResource ObjectVisibilityConverter}}" infdp:ReadOnlyPanel.IsReadOnly="{Binding IsReadOnly, UpdateSourceTrigger=PropertyChanged}"
                                CurrentItem="{Binding CurrentItemDetails}" dxe:ValidationService.IsValidationContainer="True" AutoGenerateItems="False" Width="auto" >

                            <dxlc:DataLayoutItem Label="Image">

                                <Grid>
                                    <dxe:ImageEdit MaxHeight="200" EditValue="{Binding Image.Bytes, ValidatesOnDataErrors=True, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                    <dx:WaitIndicator DeferedVisibility="{Binding DataContext.IsImageLoading, RelativeSource={RelativeSource AncestorType=UserControl}}" Content="Loading...">
                                        <dx:WaitIndicator.ContentTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Vertical">
                                                    <TextBlock Text="Please Wait" FontSize="20"/>
                                                    <TextBlock Text="{Binding}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </dx:WaitIndicator.ContentTemplate>
                                    </dx:WaitIndicator>
                                </Grid>
                            </dxlc:DataLayoutItem>
                        <dxlc:DataLayoutItem Label="Name" infdp:DataProperties.Required="True">
                                <dxe:ButtonEdit ValidateOnTextInput="False" infdp:ReadOnlyPanel.AlwaysReadOnly="True" Text="{Binding MainName, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" AllowDefaultButton="False">
                                    <dxe:ButtonEdit.Buttons>
                                        <dxe:ButtonInfo Content="Edit" Command="{Binding DataContext.NameEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType=UserControl}}"/>
                                    </dxe:ButtonEdit.Buttons>
                                </dxe:ButtonEdit>
                            </dxlc:DataLayoutItem>
                        <dxlc:DataLayoutItem Label="Category" infdp:DataProperties.Required="True">
                                <dxg:LookUpEdit EditValueChanging="CategoryEdit_EditValueChanging" AutoPopulateColumns="False" ItemsSource="{Binding DataContext.ChildCategories, RelativeSource={RelativeSource AncestorType=Grid}}" DisplayMember="Name" ImmediatePopup="True" 
                         x:Name="categoryEdit" ValueMember="ID" EditValue="{Binding CategoryID, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                                    <dxg:LookUpEdit.PopupContentTemplate>
                                        <ControlTemplate>
                                        <dxg:GridControl infdp:GridProperties.GenerateColumns="True" x:Name="PART_GridControl" AutoGenerateColumns="None" EnableSmartColumnsGeneration="False">
                                                <dxg:GridControl.View>
                                                    <dxg:TableView AutoWidth="True" x:Name="treeListView1"  />
                                                </dxg:GridControl.View>
                                            </dxg:GridControl>
                                        </ControlTemplate>
                                    </dxg:LookUpEdit.PopupContentTemplate>
                                </dxg:LookUpEdit>
                            </dxlc:DataLayoutItem>
                        <dxlc:DataLayoutItem Label="Brand" infdp:DataProperties.Required="True">
                                <dxg:LookUpEdit AutoPopulateColumns="False" ItemsSource="{Binding DataContext.Brands, RelativeSource={RelativeSource AncestorType=Grid}}" DisplayMember="Name" ImmediatePopup="True" 
                         ValueMember="ID" EditValue="{Binding BrandID, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                                    <dxg:LookUpEdit.PopupContentTemplate>
                                        <ControlTemplate>
                                        <dxg:GridControl infdp:GridProperties.GenerateColumns="True" x:Name="PART_GridControl" AutoGenerateColumns="None" EnableSmartColumnsGeneration="False">
                                                <dxg:GridControl.View>
                                                    <dxg:TreeListView AutoWidth="True" x:Name="treeListView1" TreeDerivationMode="Selfreference" KeyFieldName="ID" ParentFieldName="ParentID" />
                                                </dxg:GridControl.View>
                                            </dxg:GridControl>
                                        </ControlTemplate>
                                    </dxg:LookUpEdit.PopupContentTemplate>
                                </dxg:LookUpEdit>
                            </dxlc:DataLayoutItem>
                        <dxlc:DataLayoutItem Label="Price" infdp:DataProperties.Required="True">
                                <dxe:TextEdit  Mask="c" MaskType="Numeric" Text="{Binding Price, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                            </dxlc:DataLayoutItem>

                        <dxlc:DataLayoutItem Label="Size" infdp:DataProperties.Required="True">

                            <dxe:ComboBoxEdit ItemsSource="{dxe:EnumItemsSource EnumType=shared:ProductSize}" EditValue="{Binding Size, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                            </dxe:ComboBoxEdit>
                            </dxlc:DataLayoutItem>
                            <dxlc:DataLayoutItem Label="Description" infdp:DataProperties.Required="True">
                                <dxe:ButtonEdit ValidateOnTextInput="False" infdp:ReadOnlyPanel.AlwaysReadOnly="True" Text="{Binding MainDescription, Mode=OneWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" AllowDefaultButton="False">
                                    <dxe:ButtonEdit.Buttons>
                                        <dxe:ButtonInfo Content="Edit" Command="{Binding DataContext.DescriptionEditCommand, RelativeSource={RelativeSource Mode=FindAncestor, 
                                                   AncestorType=UserControl}}"/>
                                    </dxe:ButtonEdit.Buttons>
                                </dxe:ButtonEdit>
                            </dxlc:DataLayoutItem>
                        </dxlc:DataLayoutControl>
                        <dx:WaitIndicator DeferedVisibility="{Binding IsObjectLoading}">
                            <dx:WaitIndicator.ContentTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Text="Please Wait" FontSize="20"/>
                                        <TextBlock Text="{Binding}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </dx:WaitIndicator.ContentTemplate>
                        </dx:WaitIndicator>
                    </Grid>
            </dxdo:LayoutPanel>
        </dxdo:LayoutGroup>
    </dxdo:DockLayoutManager>
</UserControl>
